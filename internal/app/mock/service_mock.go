// Code generated by MockGen. DO NOT EDIT.
// Source: service/service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/paramonies/ozon-link-shortener/internal/app/model"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateLink mocks base method.
func (m *MockService) CreateLink(arg0 string) (model.ClientLink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLink", arg0)
	ret0, _ := ret[0].(model.ClientLink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLink indicates an expected call of CreateLink.
func (mr *MockServiceMockRecorder) CreateLink(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLink", reflect.TypeOf((*MockService)(nil).CreateLink), arg0)
}

// GetLongLink mocks base method.
func (m *MockService) GetLongLink(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLongLink", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLongLink indicates an expected call of GetLongLink.
func (mr *MockServiceMockRecorder) GetLongLink(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLongLink", reflect.TypeOf((*MockService)(nil).GetLongLink), arg0)
}

// GetShortLink mocks base method.
func (m *MockService) GetShortLink(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShortLink", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetShortLink indicates an expected call of GetShortLink.
func (mr *MockServiceMockRecorder) GetShortLink(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShortLink", reflect.TypeOf((*MockService)(nil).GetShortLink), arg0)
}
